name: CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # GitHub 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # Oracle 서버에 코드 전송 (.env.docker 등 제외)
      - name: Copy project files to Oracle server (excluding .env.docker)
        uses: Burnett01/rsync-deployments@7.0.2
        with:
          switches: -avzr --delete \
            --exclude=".git/" \
            --exclude=".github/" \
            --exclude="build/" \
            --exclude=".env.docker" \
            --exclude=".env.local"
          path: .
          remote_path: /home/ubuntu/ilhayoung
          remote_host: ${{ secrets.ORACLE_HOST }}
          remote_user: ${{ secrets.ORACLE_USER }}
          remote_key: ${{ secrets.ORACLE_SSH_KEY }}

      # Oracle 서버에서 .env.docker 생성 (GitHub Secrets에서 복호화)
      - name: Create .env.docker on Oracle server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ORACLE_HOST }}
          username: ${{ secrets.ORACLE_USER }}
          key: ${{ secrets.ORACLE_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/ilhayoung
            echo "${{ secrets.ENV_DOCKER }}" | base64 --decode > .env.docker || { echo "Failed to decode .env.docker"; exit 1; }
            echo ".env.docker created"

      # Docker Compose로 서비스 재배포
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ORACLE_HOST }}
          username: ${{ secrets.ORACLE_USER }}
          key: ${{ secrets.ORACLE_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/ilhayoung
            echo "Stopping current containers..."
            sudo docker compose down || true
            echo "Starting containers with updated code..."
            sudo docker compose --env-file .env.docker up -d --build
            echo "Deployment complete"